# A compose docker used to deploy stack services to automate the publication of the
# DETER project's GeoTiffs.
version: "2"
services:
  postgresdb:
    image: terrabrasilis/postgis-shp2pgsql:11-2.5
    hostname: postgresdb
    ports:
      - 5432
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - /data/postgres/pgdata:/var/lib/postgresql/data
      - /data/postgres/scripts:/scripts
    restart: always

  gsmaster:
    image: terrabrasilis/geoserver-deter:v1.0.0
    hostname: master.geoserver
    ports:
      - "8080:8080"
    volumes:
      - /geoserver/gs_datadir:/var/local/geoserver
      - /geoserver/gs_extensions:/var/local/geoserver-exts
      - /geoserver/data/production:/var/local/geoserver/data-files:ro
    environment:
      COOKIE: JSESSIONID prefix
      CLUSTER_CONFIG_DIR: /var/local/geoserver/cluster/master
      GEOSERVER_LOG_LOCATION: /var/local/geoserver/cluster/logs/master
      instanceName: master
    restart: always

  amz-ftp-download:
    image: terrabrasilis/raster-ftp-download:v1.0.1
    volumes:
      - /data/amazonia/raster/download:/usr/local/data
      - /data/amazonia/raster/log:/usr/local/raster-ftp-download/log
      - /data/amazonia/raster/config:/usr/local/data/config
    restart: always
  
  amz-process:
    image: terrabrasilis/raster-process:v1.0.0
    volumes:
      - /data/amazonia/raster/download:/usr/local/data
      - /data/amazonia/raster/processed:/usr/local/data/processed
      - /data/amazonia/raster/log:/usr/local/raster-process/log
      - /data/amazonia/raster/config:/usr/local/data/config
    restart: always
  
  amz-publisher:
    image: terrabrasilis/raster-publisher:v1.2.0
    volumes:
      - /data/amazonia/raster/processed:/usr/local/data/processed
      - /data/amazonia/raster/log:/usr/local/raster-publisher/log
      - /data/amazonia/raster/config:/usr/local/data/config
      - /geoserver/data/production/amazonia:/var/local/geoserver/data-files/amazonia
    restart: always

  cerrado-ftp-download:
    image: terrabrasilis/raster-ftp-download:v1.0.1
    volumes:
      - /data/cerrado/raster/download:/usr/local/data
      - /data/cerrado/raster/log:/usr/local/raster-ftp-download/log
      - /data/cerrado/raster/config:/usr/local/data/config
    restart: always
  
  cerrado-process:
    image: terrabrasilis/raster-process:v1.0.0
    volumes:
      - /data/cerrado/raster/download:/usr/local/data
      - /data/cerrado/raster/processed:/usr/local/data/processed
      - /data/cerrado/raster/log:/usr/local/raster-process/log
      - /data/cerrado/raster/config:/usr/local/data/config
    restart: always
  
  cerrado-publisher:
    image: terrabrasilis/raster-publisher:v1.1.0
    volumes:
      - /data/cerrado/raster/processed:/usr/local/data/processed
      - /data/cerrado/raster/log:/usr/local/raster-publisher/log
      - /data/cerrado/raster/config:/usr/local/data/config
      - /geoserver/data/production/cerrado:/var/local/geoserver/data-files/cerrado
    restart: always

  # Used only if we deploy a GeoServer cluster to provide load balancing.
  # nginx-geoserver:
  #   image: terrabrasilis/nginx-geoserver:v06
  #   hostname: nginx.geoserver
  #   ports:
  #     - "80:80"
  #     #- "443"
  #   volumes:        
  #     ### configs        
  #     - /data/nginx/geoserver/conf.d:/etc/nginx/conf.d
  #     ### logs         
  #     - /data/nginx/geoserver/log:/var/log/nginx
  #   tty: true
  #   restart: always
