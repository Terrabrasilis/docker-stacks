[
    {
      "type": 2,
      "name": "DETER-SAR",
      "title": "The scheduled task to load deter-sar from FTP and import into database.",
      "description": "Tasks to download a ZIP file from FTP, unzip it and import it into a postgres database.",
      "note": "This service can be deployed without dependencies.",
      "categories": ["service"],
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/terrabrasilis/docker-stacks/master/icons/backend.png",
      "repository": {
          "url": "https://github.com/Terrabrasilis/docker-stacks",
          "stackfile": "cluster2/backend/deter-sar.yaml"
      }
    },
    {
        "type": 2,
        "name": "cluster2-nginx",
        "title": "NGINX proxies for only for cluster2",
        "description": "The http entry point only for resources in our Cluster2 Swarm in normal operation.",
        "note": "The Nginx Server will be deployed globally inside the cluster and available on port 80.",
        "categories": ["server","proxy"],
        "platform": "linux",
        "logo": "https://raw.githubusercontent.com/terrabrasilis/docker-stacks/master/icons/backend.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "cluster2/backend/nginx-proxy.yaml"
        }
    },
    {
        "type": 2,
        "name": "deter_release_data",
        "title": "Stack of data service and authentication for release DETER data.",
        "description": "A set of services compounds by an API to validate a JWT token and delivery JSON data and a set of scripts to prepare the data to use for download and dashboard features.",
        "note": "This services are optional and it's use only when the deforestation alerts database, called DETER-B, exists and is properly configured. Another configurations are necessary like Secrets inside Portainer. See the Stack definition file to more specific details.",
        "categories": ["auto tasks", "services"],
        "platform": "linux",
        "logo": "https://raw.githubusercontent.com/terrabrasilis/docker-stacks/master/icons/backend.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "deter-sync/data-service-auth.yaml"
        }
    },
    {
        "type": 2,
        "name": "proxy-ogc",
        "title": "The proxy to bypass CORS",
        "description": "The http used to bypass CORS when webmap calls GeoServer capabilities",
        "note": "The PROXY Server will be deployed globally inside the cluster and available on port 80.",
        "categories": ["service"],
        "platform": "linux",
        "logo": "https://raw.githubusercontent.com/terrabrasilis/docker-stacks/master/icons/backend.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "services/proxy-ogc.yaml"
        }
    },
    {
        "type": 2,
        "name": "cluster1-nginx",
        "title": "NGINX for main cluster",
        "description": "The http entry point for all resources in our Swarm cluster",
        "note": "The Nginx Server will be deployed globally inside the cluster and available on port 80.",
        "categories": ["webserver"],
        "platform": "linux",
        "logo": "https://raw.githubusercontent.com/terrabrasilis/docker-stacks/master/icons/backend.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "nginx-manager/manager.yaml"
        }
    },
    {
        "type": 2,
        "name": "business-api",
        "title": "Business API as a Service",
        "description": "Using this API you can request for all data like Visions, Layers, Tools, Data Sources, Downloads and Subdomains.",
        "note": "This service is mandatory to configure the TreeView of the WebApp and the Download list of WebSite. This stack includes an instance of API and a MongoDB to store JSON documents.",
        "categories": ["API","services"],
        "platform": "linux",
        "logo": "http://terrabrasilis.dpi.inpe.br/wp-content/uploads/2019/03/geoespaciais1.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "api/business-api.yaml"
        }
    },
    {
        "type": 2,
        "name": "geoserver-cluster",
        "title": "GeoServer cluster",
        "description": "The stack of the cluster GeoServer Application.",
        "note": "This service is needed to provide the OWS services. It's includes some instances of GeoServer and one instance of ActiveMQ as a Broker.",
        "categories": ["OWS","API","services"],
        "platform": "linux",
        "logo": "http://terrabrasilis.dpi.inpe.br/wp-content/uploads/2019/03/geoespaciais1.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "cluster2/backend/geoserver-cluster.yaml"
        }
    },
    {
        "type": 2,
        "name": "geonetwork",
        "title": "GeoNetwork instance",
        "description": "The custom instance of GeoNetwork.",
        "note": "This service is optional but recommended to provide a catalog of Metadata. It's includes an instance of GeoNetwork application.",
        "categories": ["OWS","API","services"],
        "platform": "linux",
        "logo": "http://terrabrasilis.dpi.inpe.br/wp-content/uploads/2019/03/geoespaciais1.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "applications/geonetwork.yaml"
        }
    },
    {
        "type": 2,
        "name": "dashboard-alerts",
        "title": "Alerts dashboard",
        "description": "A set of dashboards for DETER project with alerts of deforestation into Amazon and Cerrado.",
        "note": "This applications is optional and it's use only when the alerts database exists and is properly configured. It's includes four instances of panels each one with particular purpose.",
        "categories": ["application"],
        "platform": "linux",
        "logo": "http://terrabrasilis.dpi.inpe.br/wp-content/uploads/2019/03/dashboard2.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "dashboards/dashboard-alerts.yaml"
        }
    },
    {
        "type": 2,
        "name": "dashboard-deforestation",
        "title": "Back-end of deforestation dashboard",
        "description": "The back-end services to dashboard for PRODES project with increments of deforestation for all biomes of Brazil.",
        "note": "This application is optional and it's use only when the deforestation database, called Dashboard-data-model, exists and is properly configured. It's includes instances of software components as Nginx, REDIS, REDIS-monitor and REDIS api.",
        "categories": ["API","services"],
        "platform": "linux",
        "logo": "https://raw.githubusercontent.com/terrabrasilis/docker-stacks/master/icons/backend.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "dashboards/dashboard-deforestation.yaml"
        }
    },
    {
        "type": 2,
        "name": "terrabrasilis-website",
        "title": "The entry point Website",
        "description": "The TerraBrasilis Website based in Wordpress. It's the entry point of all TerraBrasilis resources.",
        "note": "This stack are optional, but without this, no one responds by the root URL.",
        "categories": ["application"],
        "platform": "linux",
        "logo": "http://terrabrasilis.dpi.inpe.br/wp-content/uploads/2019/03/geoespaciais1.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "terrabrasilis-website/terrabrasilis-website.yaml"
        }
    },
    {
        "type": 2,
        "name": "webapps",
        "title": "The WebMap and deforestation-dashborad Apps for production",
        "description": "The TerraBrasilis WebMap is the main component of the Web GUIs for explore our maps using the OGC services. The dashboard is the main component Web GUI for explore the deforestation data analytics produced by PRODES.",
        "note": "This stack are optional and responds by the Map and Deforestation-dashboard URLs for production use.",
        "categories": ["application"],
        "platform": "linux",
        "logo": "http://terrabrasilis.dpi.inpe.br/wp-content/uploads/2019/03/geoespaciais1.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "terrabrasilis-webapp/webapps.yaml"
        }
    },
    {
        "type": 2,
        "name": "monitor_panel",
        "title": "The Grafana monitor panel and dependencies like influxdb and agents.",
        "description": "The Monitor panel is an instance of grafana and its dependencies is compound by an agent per node and one influxdb to store the statistics from containers and services.",
        "note": "This stack are optional and used to monitoring services on docker swarm.",
        "categories": ["application","manage"],
        "platform": "linux",
        "logo": "http://terrabrasilis.dpi.inpe.br/wp-content/uploads/2019/03/geoespaciais1.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "applications/grafana.yaml"
        }
    },
    {
        "type": 2,
        "name": "health-check",
        "title": "The cluster2 health check service",
        "description": "A simple service to response to a request with the node hostname where it runs.",
        "note": "This stack are optional.",
        "categories": ["manage"],
        "platform": "linux",
        "logo": "http://terrabrasilis.dpi.inpe.br/wp-content/uploads/2019/03/geoespaciais1.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "cluster2/backend/cluster-health-check.yaml"
        }
    },
    {
        "type": 2,
        "name": "mysql",
        "title": "The MySQL SGDB and the WebClient PhpMyAdmin.",
        "description": "The PhpMyAdmin App allows to manage the databases into any internal instance for MySQL.",
        "note": "This stack are optional and is used for store and manage the databases of the WordPress such as TerraBrasilis Web site and another PHP web pages.",
        "categories": ["application","manage", "SGDB", "mysql"],
        "platform": "linux",
        "logo": "http://terrabrasilis.dpi.inpe.br/wp-content/uploads/2019/03/geoespaciais1.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "applications/mysql.yaml"
        }
    },
    {
        "type": 2,
        "name": "php-pages",
        "title": "The general pages with PHP and MySQL",
        "description": "Used to deploy pages made with PHP as survey and certificates.",
        "note": "This stack are optional and is used when we have any PHP web pages.",
        "categories": ["application"],
        "platform": "linux",
        "logo": "http://terrabrasilis.dpi.inpe.br/wp-content/uploads/2019/03/geoespaciais1.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "applications/php-pages.yaml"
        }
    },
    {
        "type": 2,
        "name": "timeseries-ocpu",
        "title": "The timeseries using ocpu",
        "description": "The timeseries app allows the integration between R package sits and TerraBrasilis webapp using openCPU.",
        "note": "This stack are optional, but without this, no timeseries will be extracted.",
        "categories": ["API","services"],
        "platform": "linux",
        "logo": "http://terrabrasilis.dpi.inpe.br/wp-content/uploads/2019/03/geoespaciais1.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "api/timeseries-ocpu.yaml"
        }
    },
    {
        "type": 2,
        "name": "terrabrasilis-oauth-api",
        "title": "Stack of user authentication and validation service.",
        "description": "A set of services compounds by an API to validate a JWT token, to provide an API to be integrated on any terrbrasilis app.",
        "categories": ["services"],
        "platform": "linux",
        "logo": "https://raw.githubusercontent.com/terrabrasilis/docker-stacks/master/icons/backend.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "services/oauth-api.yaml"
        }
    },
    {
        "type": 2,
        "name": "deter_replication",
        "title": "The PostgreSQL SGDB with PostGIS.",
        "description": "The internal instance for PostgreSQL.",
        "note": "This stack are optional and is used for replication as standby server from production database at Belem.",
        "categories": ["services", "SGDB", "postgres"],
        "platform": "linux",
        "logo": "https://raw.githubusercontent.com/terrabrasilis/docker-stacks/master/icons/backend.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "cluster2/backend/pg_standby.yaml"
        }
    }
]
